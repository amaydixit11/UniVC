{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Amay%20dixit/Desktop/Development/MOSIPDecode/frontend/src/lib/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080/api';\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 30000,\r\n});\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response: ${response.status} ${response.config.url}`);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);"],"names":[],"mappings":";;;AAEqB;AAFrB;;AAEA,MAAM,eAAe,iEAAmC;AAEjD,MAAM,YAAY,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;IACA,SAAS;AACX;AAEA,sBAAsB;AACtB,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,CAAC;IACC,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,OAAO,MAAM,EAAE,cAAc,CAAC,EAAE,OAAO,GAAG,EAAE;IACxE,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,uBAAuB;AACvB,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC;IACC,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE;IACrE,OAAO;AACT,GACA,CAAC;IACC,QAAQ,KAAK,CAAC,cAAc,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;IACjE,OAAO,QAAQ,MAAM,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Amay%20dixit/Desktop/Development/MOSIPDecode/frontend/src/components/HealthCheck.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { apiClient } from \"@/lib/api\";\r\nimport { ApiResponse, HealthData } from \"@/types/api\";\r\nimport { CheckCircle, XCircle, Loader2 } from \"lucide-react\";\r\n\r\nexport default function HealthCheck() {\r\n  const [health, setHealth] = useState<HealthData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await apiClient.get<ApiResponse<HealthData>>(\"/health\");\r\n      setHealth(response.data.data);\r\n    } catch (err: any) {\r\n      setError(err.message || \"Failed to check health\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkHealth();\r\n  }, []);\r\n\r\n  const getStatusIcon = () => {\r\n    if (loading) return <Loader2 className=\"w-5 h-5 animate-spin\" />;\r\n    if (error) return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n    if (health?.status === \"UP\")\r\n      return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n    return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (loading) return \"Checking...\";\r\n    if (error) return \"Backend Offline\";\r\n    if (health?.status === \"UP\") return \"Backend Online\";\r\n    return \"Backend Error\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">System Status</h2>\r\n\r\n      <div className=\"flex items-center space-x-3 mb-4\">\r\n        {getStatusIcon()}\r\n        <span className=\"font-medium\">{getStatusText()}</span>\r\n      </div>\r\n\r\n      {health && (\r\n        <div className=\"space-y-2 text-sm text-gray-600\">\r\n          <div>Application: {health.application}</div>\r\n          <div>Version: {health.version}</div>\r\n          <div>Last Check: {new Date(health.timestamp).toLocaleString()}</div>\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded p-3 text-red-700 text-sm\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        onClick={checkHealth}\r\n        disabled={loading}\r\n        className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50\"\r\n      >\r\n        {loading ? \"Checking...\" : \"Refresh\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAAA;AAAA;;;AALA;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc;QAClB,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,WAAW,MAAM,oHAAA,CAAA,YAAS,CAAC,GAAG,CAA0B;YAC9D,UAAU,SAAS,IAAI,CAAC,IAAI;QAC9B,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG,EAAE;IAEL,MAAM,gBAAgB;QACpB,IAAI,SAAS,qBAAO,6LAAC,oNAAA,CAAA,UAAO;YAAC,WAAU;;;;;;QACvC,IAAI,OAAO,qBAAO,6LAAC,+MAAA,CAAA,UAAO;YAAC,WAAU;;;;;;QACrC,IAAI,QAAQ,WAAW,MACrB,qBAAO,6LAAC,8NAAA,CAAA,cAAW;YAAC,WAAU;;;;;;QAChC,qBAAO,6LAAC,+MAAA,CAAA,UAAO;YAAC,WAAU;;;;;;IAC5B;IAEA,MAAM,gBAAgB;QACpB,IAAI,SAAS,OAAO;QACpB,IAAI,OAAO,OAAO;QAClB,IAAI,QAAQ,WAAW,MAAM,OAAO;QACpC,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAE3C,6LAAC;gBAAI,WAAU;;oBACZ;kCACD,6LAAC;wBAAK,WAAU;kCAAe;;;;;;;;;;;;YAGhC,wBACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;4BAAI;4BAAc,OAAO,WAAW;;;;;;;kCACrC,6LAAC;;4BAAI;4BAAU,OAAO,OAAO;;;;;;;kCAC7B,6LAAC;;4BAAI;4BAAa,IAAI,KAAK,OAAO,SAAS,EAAE,cAAc;;;;;;;;;;;;;YAI9D,uBACC,6LAAC;gBAAI,WAAU;;oBAAmE;oBACxE;;;;;;;0BAIZ,6LAAC;gBACC,SAAS;gBACT,UAAU;gBACV,WAAU;0BAET,UAAU,gBAAgB;;;;;;;;;;;;AAInC;GAtEwB;KAAA","debugId":null}}]
}